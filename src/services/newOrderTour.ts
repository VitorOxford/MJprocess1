// src/services/newOrderTour.ts

import Shepherd from 'shepherd.js';
import 'shepherd.js/dist/css/shepherd.css';
import '../styles/shepherd-theme.scss';

// Fun√ß√£o que configura e retorna a inst√¢ncia do tour
export function createNewOrderTour(
  goToStep: (step: number) => void,
  isMobile: boolean = false
) {
  const tour = new Shepherd.Tour({
    useModalOverlay: true,
    defaultStepOptions: {
      cancelIcon: {
        enabled: true,
      },
      classes: 'shepherd-mj-theme',
      scrollTo: { behavior: 'smooth', block: 'center' },
    },
  });

  // Fun√ß√£o auxiliar para bot√µes
  const getButtons = (nextAction: () => void, backAction?: () => void) => {
    const buttons = [];
    if (backAction) {
      buttons.push({
        action: backAction,
        secondary: true,
        text: 'Voltar',
      });
    }
    buttons.push({
      action: nextAction,
      classes: 'shepherd-button-primary',
      text: 'Pr√≥ximo',
    });
    return buttons;
  };

  // Definindo os passos do Tour (vers√£o aprimorada)
  tour.addStep({
    id: 'step-1-intro',
    title: 'üöÄ Tour: Lan√ßando um Novo Pedido',
    text: 'Ol√°! Vamos juntos aprender a lan√ßar um pedido de forma r√°pida e eficiente. Este guia interativo mostrar√° as principais funcionalidades da tela. <br><br>A qualquer momento, voc√™ pode clicar fora do bal√£o ou no "X" para sair.',
    buttons: getButtons(() => tour.next()),
  });

  tour.addStep({
    id: 'step-1-cliente',
    title: 'Passo 1: Identifica√ß√£o do Cliente',
    text: 'Tudo come√ßa com o cliente. Comece a digitar aqui para buscar em sua carteira. <br><br> ‚ú® <strong>Dica:</strong> Se for um cliente novo, clique no √≠cone <strong>"+"</strong> ao lado para fazer um cadastro r√°pido, sem sair da tela.',
    attachTo: {
      element: '#tour-client-select',
      on: isMobile ? 'top' : 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
    when: {
      show: () => goToStep(1),
    },
  });

  tour.addStep({
    id: 'step-1-vendedor',
    title: 'Seu Nome de Vendedor',
    text: 'Seu nome j√° √© preenchido automaticamente, garantindo que a comiss√£o e o registro de venda sejam atribu√≠dos a voc√™. <br><br>Ap√≥s selecionar o cliente, clique em <strong>"Continuar"</strong> no final da p√°gina.',
    attachTo: {
      element: '#tour-seller-name',
      on: 'top',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-intro',
    title: 'Passo 2: Montagem dos Itens',
    text: 'Esta √© a etapa principal, onde voc√™ adiciona e configura cada produto que o cliente deseja.',
    attachTo: {
      element: '#tour-step-2-panel',
      on: isMobile ? 'top' : 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => {
      goToStep(1);
      tour.back();
    }),
    when: {
      show: () => goToStep(2),
    },
  });

  tour.addStep({
    id: 'step-2-item-list',
    title: 'Sua Lista de Compras',
    text: '√Ä medida que voc√™ adiciona itens, eles aparecer√£o aqui formando a lista do pedido. O valor total √© atualizado em tempo real. Voc√™ pode clicar em um item para edit√°-lo ou exclu√≠-lo.',
    attachTo: {
      element: '#tour-item-list',
      on: 'right',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-add-item-form',
    title: 'Configurador de Itens',
    text: '√â neste formul√°rio que a m√°gica acontece. Use os campos abaixo para detalhar cada item do pedido.',
    attachTo: {
      element: '#tour-item-form',
      on: 'left',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-product-stamp',
    title: 'Base (Tecido) e Estampa',
    text: 'Selecione o <strong>tecido</strong> e a <strong>estampa</strong>. <br><br>üé® <strong>Estampa Nova?</strong> Se n√£o encontrar a estampa, clique em <i>"Cadastre uma nova estampa"</i> para fazer o upload do arquivo e dar um nome a ela. O sistema a salvar√° para vendas futuras.',
    attachTo: {
      element: '#tour-product-stamp-fields',
      on: 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-quantity-stock',
    title: 'Quantidade e Estoque',
    text: 'Defina a quantidade (em metros ou Kg). A barra de progresso abaixo mostra o impacto no estoque atual. <br><br>‚ö†Ô∏è <strong>Aten√ß√£o:</strong> Se a barra ficar vermelha, significa que o estoque ficar√° negativo e um alerta ser√° gerado para o time de compras!',
    attachTo: {
      element: '#tour-quantity-field',
      on: 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-price-override',
    title: 'Pre√ßo Negociado',
    text: 'O sistema puxa o pre√ßo de tabela do produto. Caso voc√™ tenha negociado um valor diferente com o cliente, marque esta caixa e insira o pre√ßo combinado.',
    attachTo: {
      element: '#tour-price-override',
      on: 'top',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-design-destination',
    title: 'Direcionamento para o Design',
    text: 'Aqui voc√™ define o status inicial do item para a equipe de design. Isso ajuda a organizar o fluxo de trabalho deles. <br><br>Ex: "Desenvolvimento" para artes novas, "Altera√ß√£o" para ajustes, etc.',
    attachTo: {
      element: '#tour-design-tags',
      on: 'top',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-2-add-to-list',
    title: 'Adicionar ao Pedido',
    text: 'Ap√≥s preencher todos os detalhes, clique aqui para salvar o item e adicion√°-lo √† lista √† esquerda. Depois, voc√™ pode adicionar o pr√≥ximo item!',
    attachTo: {
      element: '#tour-add-item-button',
      on: 'top',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-3-intro',
    title: 'Passo 3: Pagamento e Finaliza√ß√£o',
    text: '√ìtimo! Itens adicionados. Agora, a √∫ltima etapa: definir como o cliente ir√° pagar.',
    attachTo: {
      element: '#tour-step-3-panel',
      on: isMobile ? 'top' : 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => {
      goToStep(2);
      tour.back();
    }),
    when: {
      show: () => goToStep(3),
    },
  });

  tour.addStep({
    id: 'step-3-payment-type',
    title: 'Condi√ß√µes de Pagamento',
    text: 'Selecione "√Ä vista" ou "Parcelado". Ao escolher "Parcelado", o sistema abrir√° op√ß√µes para voc√™ definir o n√∫mero de parcelas, o intervalo e gerar a previs√£o de vencimentos.',
    attachTo: {
      element: '#tour-payment-type',
      on: 'bottom',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-3-down-payment',
    title: 'Pagamento de Sinal (Entrada)',
    text: 'Caso o cliente tenha pago um sinal para confirmar o pedido, ative esta op√ß√£o. Voc√™ poder√° anexar o comprovante, que ficar√° vinculado ao pedido para confer√™ncia do financeiro.',
    attachTo: {
      element: '#tour-down-payment-switch',
      on: 'top',
    },
    buttons: getButtons(() => tour.next(), () => tour.back()),
  });

  tour.addStep({
    id: 'step-final',
    title: 'üéâ Tudo Pronto para Lan√ßar!',
    text: 'Com tudo configurado, este √© o bot√£o final. Ao clicar, o pedido √© oficialmente criado e enviado para as pr√≥ximas etapas (design e produ√ß√£o). <br><br><strong>O tour termina aqui. Boas vendas!</strong>',
    attachTo: {
      element: '#tour-submit-button',
      on: 'top',
    },
    buttons: [
      {
        action: () => {
          goToStep(1);
          tour.complete();
        },
        classes: 'shepherd-button-primary',
        text: 'Finalizar Tour',
      },
    ],
  });

  return tour;
}
